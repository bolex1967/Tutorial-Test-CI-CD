
npm install --save-dev jest
npx jest

Потрібно написати ось таке:
Напишіть код модульного тесту для функції, яка додає два числа, переконайтеся, що тест перевіряє правильність результату при дійсних вхідних параметрах.
ChatGPT
Чудово, що все добре! Давай розглянемо створення модульного тесту для функції, яка додає два числа. Ми будемо використовувати популярну бібліотеку для тестування в JavaScript - Jest.

Кроки:
Створити функцію для додавання чисел.
Написати тест для цієї функції.
1. Створення функції для додавання чисел
Нехай наша функція add виглядає так:

javascript
Копіювати код
// add.js
function add(a, b) {
  return a + b;
}

module.exports = add;
2. Написання модульного тесту
Створимо файл тесту, який перевірятиме правильність роботи функції add. Наприклад, можна створити файл add.test.js у тій же директорії.

javascript
Копіювати код
// add.test.js
const add = require('./add');

test('додає два числа 2 і 3, щоб отримати 5', () => {
  expect(add(2, 3)).toBe(5);
});

test('додає від’ємні числа -1 і -1, щоб отримати -2', () => {
  expect(add(-1, -1)).toBe(-2);
});

test('додає нуль до будь-якого числа, щоб отримати те ж саме число', () => {
  expect(add(0, 5)).toBe(5);
  expect(add(7, 0)).toBe(7);
});

test('додає дробові числа 0.1 і 0.2, щоб отримати 0.3 з точністю до 5 знаків після коми', () => {
  expect(add(0.1, 0.2)).toBeCloseTo(0.3, 5);
});
Пояснення:
test: Функція для визначення окремого тесту. Приймає опис тесту та функцію, яка містить логіку тестування.
expect: Функція, яка використовується для перевірки результатів. Вона забезпечує різні методи, як-от toBe або toBeCloseTo, щоб порівнювати очікуваний результат із фактичним.
toBe: Перевіряє, чи є результат саме таким, як очікується.
toBeCloseTo: Перевіряє, чи є результат близьким до очікуваного значення з вказаною точністю, корисно для порівняння дробових чисел.
Запуск тестів
Якщо у вас встановлено Jest, ви можете запустити тести, виконавши команду:

bash
Копіювати код
npx jest
або, якщо у вас глобально встановлений Jest:

bash
Копіювати код
jest
Встановлення Jest
Якщо у вас ще не встановлений Jest, ви можете зробити це за допомогою npm або yarn:

bash
Копіювати код
npm install --save-dev jest
# або
yarn add --dev jest
Після цього ви можете додати скрипт у ваш package.json для зручності запуску тестів:

json
Копіювати код
{
  "scripts": {
    "test": "jest"
  }
}
І тепер ви можете запускати тести, використовуючи:

bash
Копіювати код
npm test
# або
yarn test
Таким чином, ми створили просту функцію для додавання чисел і написали модульний тест для перевірки її правильності. Якщо у тебе є додаткові питання або завдання, з радістю допоможу!